using System;

//Generated by https://github.com/blat-blatnik/BeefWin32 and cherry picked. Not all APIs were copied over since Nanoforge only needs a small part of the massive windows API

namespace Win32
{
#region Types
    public typealias HDC = int;
    public typealias CreatedHDC = int;
    public typealias HBITMAP = int;
    public typealias HRGN = int;
    public typealias HPEN = int;
    public typealias HBRUSH = int;
    public typealias HFONT = int;
    public typealias HMETAFILE = int;
    public typealias HENHMETAFILE = int;
    public typealias HPALETTE = int;
    public typealias HdcMetdataFileHandle = int;
    public typealias HdcMetdataEnhFileHandle = int;
    public typealias HGDIOBJ = int;
    public typealias HMONITOR = int;
#endregion Types

    [CRepr]
    public struct LOGFONTA
    {
    	public int32 lfHeight;
    	public int32 lfWidth;
    	public int32 lfEscapement;
    	public int32 lfOrientation;
    	public int32 lfWeight;
    	public uint8 lfItalic;
    	public uint8 lfUnderline;
    	public uint8 lfStrikeOut;
    	public uint8 lfCharSet;
    	public uint8 lfOutPrecision;
    	public uint8 lfClipPrecision;
    	public uint8 lfQuality;
    	public uint8 lfPitchAndFamily;
    	public CHAR[32] lfFaceName;
    }
    [CRepr]
    public struct LOGFONTW
    {
    	public int32 lfHeight;
    	public int32 lfWidth;
    	public int32 lfEscapement;
    	public int32 lfOrientation;
    	public int32 lfWeight;
    	public uint8 lfItalic;
    	public uint8 lfUnderline;
    	public uint8 lfStrikeOut;
    	public uint8 lfCharSet;
    	public uint8 lfOutPrecision;
    	public uint8 lfClipPrecision;
    	public uint8 lfQuality;
    	public uint8 lfPitchAndFamily;
    	public char16[32] lfFaceName;
    }

	extension Win32
	{
        [Import("user32.lib"), CLink, CallingConvention(.Stdcall)]
        public static extern BOOL ClientToScreen(HWND hWnd, POINT* lpPoint);
        [Import("user32.lib"), CLink, CallingConvention(.Stdcall)]
        public static extern BOOL ScreenToClient(HWND hWnd, POINT* lpPoint);
	}
}